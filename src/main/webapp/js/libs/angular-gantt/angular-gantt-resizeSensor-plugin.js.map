{"version":3,"sources":["../src/plugins/resizeSensor.js"],"names":[],"mappings":"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","file":"angular-gantt-resizeSensor-plugin.js","sourcesContent":["(function(){\n    /* global ResizeSensor: false */\n    /* global ElementQueries: false */\n    'use strict';\n    angular.module('gantt.resizeSensor', ['gantt']).directive('ganttResizeSensor', ['$timeout', function($timeout) {\n        return {\n            restrict: 'E',\n            require: '^gantt',\n            scope: {\n                enabled: '=?'\n            },\n            link: function(scope, element, attrs, ganttCtrl) {\n                // Load options from global options attribute.\n                if (scope.options && typeof(scope.options.progress) === 'object') {\n                    for (var option in scope.options.progress) {\n                        scope[option] = scope.options[option];\n                    }\n                }\n\n                if (scope.enabled === undefined) {\n                    scope.enabled = true;\n                }\n\n                function buildSensor() {\n                    var ganttElement = element.parent().parent().parent()[0].querySelectorAll('div.gantt')[0];\n                    return new ResizeSensor(element.parent().parent().parent()[0].querySelectorAll('div.gantt')[0], function() {\n                        ganttCtrl.gantt.$scope.ganttElementWidth = ganttElement.clientWidth;\n                        ganttCtrl.gantt.$scope.$apply();\n                    });\n                }\n\n                $timeout(function() {\n                    ElementQueries.update();\n                    if (sensor !== undefined) {\n                        sensor.detach();\n                    }\n                    if (scope.enabled) {\n                        sensor = buildSensor();\n                    }\n                });\n\n                var sensor;\n                scope.$watch('enabled', function(newValue) {\n                    if (newValue && sensor === undefined) {\n                        ElementQueries.update();\n                        sensor = buildSensor();\n                    } else if (!newValue && sensor !== undefined) {\n                        sensor.detach();\n                        sensor = undefined;\n                    }\n                });\n            }\n        };\n    }]);\n}());\n\n"]}